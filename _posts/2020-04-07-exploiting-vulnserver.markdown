---
layout: post
title:  "Exploiting Vulnserver!"
date:   2020-04-07 13:30:00 -0500
categories: [cybersec, hacking, programming]
---

## The course

As part of on-the-job training, I got the chance to take a really nice course on UDemy called 'Ethical Hacking & Bug 
Hunting: Buffer Overflow For Beginners' by Eslam Medhat.

<https://www.udemy.com/course/buffer-overflow-course-exploit-development/>

It uses Kali and Windows VMs that communicate with eachother in order to perform DLL injection that leads to a reverse
shell being opened.

As someone who has never exploited this vulnerability before, this course gave me an intimate look into exactly how
these attacks occur and how to craft one from scratch, provided you have the binary of the exploitable program.

## The tools

- [Kali VM][kali-vm-git]  
    - Metasploit Framework
        - Used for creating payloads like reverse shells
        - pattern_create.rb
            - Used to create a pattern (`Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1` ...) that is 
            unique every 3 bytes to determine where data is injected into a buffer if you are only able to see 3-4 bytes,
            like in CPU registers 
            - This is useful when attempting to determine exactly when a buffer begins to overflow into the stack. 
        - pattern_offset.rb
            - Used to identify a sub-pattern to a position (i.e. `a1A` would be position 3)
    - NetCat / nc
        - Used to poke simple TCP programs like vulnserver to see if they expose vulnerable functionality.
    - spike / tcp_send_packet
        - Used to fuzz inputs to TCP programs, to see what causes a server to crash or do other interesting things...
    - Python 2
        - Used to send our payload, concatenate our buffer overflow buf with the payload, print things nicely, etc...
- [Windows VM][windows-vm-git]
    - vulnserver
        - The star of the show! Some odd TCP server that's very vulnerable.
        - Loads a DLL called essfunc.dll with no memory protections.
    - ImmunityDebugger
        - Used to debug Windows binary programs.
        - Break on specific memory locations being executed.
        - Inspect CPU registers and go to memory locations to see if a payload has been injected or not.
        - [mona][mona-git]
            - An extension for ImmunityDebugger.    
            - Search for loaded DLLs and display their memory protections
            - ??? Much more. We did not use other functionality of mona in the lab.

## The recon

TODO

## The attack

TODO


[windows-vm-git]:   https://github.com/HenryFBP/VagrantPackerFiles/tree/master/vagrant/windows-vulnerable
[kali-vm-git]:      https://github.com/HenryFBP/VagrantPackerFiles/tree/master/vagrant/kali
[mona-git]:         https://github.com/corelan/mona